{"version":3,"file":"main.min.js","sources":["cart/cart.fulfilment.js","cart/cartDirectives.js","category/categoryDirectives.js","productDetails/productDetailDirectives.js","checkout/checkoutDirectives.js","productList/productDirectives.js","topbar/topbarDirectives.js","app.js","services.js"],"names":["angular","module","service","$injector","this","_obj","undefined","settings","setService","setSettings","checkout","provider","get","$q","$log","ngCart","deferred","defer","info","toObject","resolve","cart","promise","$http","post","url","data","options","cartDirectives","controller","$scope","directive","restrict","scope","id","name","quantity","quantityMax","price","transclude","templateUrl","element","attrs","link","inCart","getItemById","q","getQuantity","parseInt","qtyOpt","i","push","$rootScope","fulfilmentProvider","success","status","headers","config","$broadcast","error","statusCode","categoryDirective","CategoryService","$mdSidenav","buildDelayedToggler","navID","toggle","categories","query","toggleLeft","productDetailsDirective","$stateParams","ProductService","filterFilter","products","console","log","productKeyValue","checkoutDirective","require","productDirective","setTaxRate","setShipping","category","categoryKeyValue","mainImageUrl","setImage","imageUrl","getImage","product","imgUrl","$element","$attrs","img","topbarDirective","OnlineStoreApp","$stateProvider","$urlRouterProvider","$mdThemingProvider","otherwise","state","template","theme","primaryPalette","run","ngCartItem","store","$on","$save","isObject","$restore","init","OnlineStoreServices","factory","$resource","method","params","isArray","$cart","shipping","taxRate","tax","items","addItem","setQuantity","newItem","itemId","getCart","build","forEach","item","getId","getShipping","length","parseFloat","toFixed","getTaxRate","getTax","getSubTotal","setCart","getItems","getTotalItems","count","getTotalUniqueItems","total","getTotal","totalCost","removeItem","index","splice","removeItemById","empty","localStorage","isEmpty","subTotal","storedCart","_self","_id","_name","_price","_quantity","_data","set","JSON","stringify","setId","setName","setPrice","setData","prototype","getName","priceFloat","getPrice","relative","quantityInt","getData","$window","key","fromJson","parse","val","toJson"],"mappings":"AAAA,AACAA,QAAAC,OAAA,wBACAC,QAAA,sBAAA,YAAA,SAAAC,GAEAC,KAAAC,MACAH,QAAAI,OACAC,SAAAD,QAGAF,KAAAI,WAAA,SAAAN,GACAE,KAAAC,KAAAH,QAAAA,GAGAE,KAAAK,YAAA,SAAAF,GACAH,KAAAC,KAAAE,SAAAA,GAGAH,KAAAM,SAAA,WACA,GAAAC,GAAAR,EAAAS,IAAA,qBAAAR,KAAAC,KAAAH,QACA,OAAAS,GAAAD,SAAAN,KAAAC,KAAAE,cAOAL,QAAA,yBAAA,KAAA,OAAA,SAAA,SAAAW,EAAAC,EAAAC,GAEAX,KAAAM,SAAA,WAEA,GAAAM,GAAAH,EAAAI,OAOA,OALAH,GAAAI,KAAAH,EAAAI,YACAH,EAAAI,SACAC,KAAAN,EAAAI,aAGAH,EAAAM,YAMApB,QAAA,0BAAA,QAAA,SAAA,SAAAqB,EAAAR,GAEAX,KAAAM,SAAA,SAAAH,GACA,MAAAgB,GAAAC,KAAAjB,EAAAkB,KACAC,KAAAX,EAAAI,WAAAQ,QAAApB,EAAAoB,cAKAzB,QAAA,4BAAA,QAAA,SAAA,SAAAqB,EAAAR,MChDA,IAAAa,gBAAA5B,QAAAC,OAAA,kBAAA,sBAEA4B,WAAA,kBAAA,SAAA,SAAA,SAAAC,EAAAf,GACAe,EAAAf,OAAAA,KAGAgB,UAAA,mBAAA,SAAA,SAAAhB,GACA,OACAiB,SAAA,IACAH,WAAA,iBACAI,OACAC,GAAA,IACAC,KAAA,IACAC,SAAA,IACAC,YAAA,IACAC,MAAA,IACAZ,KAAA,KAEAa,YAAA,EACAC,YAAA,SAAAC,EAAAC,GACA,MAAA,mBAAAA,GAAAF,YACA,iCAEAE,EAAAF,aAGAG,KAAA,SAAAV,EAAAQ,EAAAC,GACAT,EAAAS,MAAAA,EACAT,EAAAW,OAAA,WACA,MAAA7B,GAAA8B,YAAAH,EAAAR,KAGAD,EAAAW,SACAX,EAAAa,EAAA/B,EAAA8B,YAAAH,EAAAR,IAAAa,cAEAd,EAAAa,EAAAE,SAAAf,EAAAG,UAGAH,EAAAgB,SACA,KAAA,GAAAC,GAAA,EAAAA,GAAAjB,EAAAI,YAAAa,IACAjB,EAAAgB,OAAAE,KAAAD,QAQAnB,UAAA,cAAA,WACA,OACAC,SAAA,IACAH,WAAA,iBACAI,SACAO,YAAA,SAAAC,EAAAC,GACA,MAAA,mBAAAA,GAAAF,YACA,gCAEAE,EAAAF,aAGAG,KAAA,SAAAV,EAAAQ,EAAAC,SAMAX,UAAA,iBAAA,WACA,OACAC,SAAA,IACAH,WAAA,iBACAI,SACAM,YAAA,EACAC,YAAA,SAAAC,EAAAC,GACA,MAAA,mBAAAA,GAAAF,YACA,+BAEAE,EAAAF,iBAMAT,UAAA,kBAAA,WACA,OACAC,SAAA,IACAH,YAAA,aAAA,SAAA,SAAA,qBAAA,SAAAuB,EAAAtB,EAAAf,EAAAsC,GACAvB,EAAAf,OAAAA,EAEAe,EAAApB,SAAA,WACA2C,EAAA7C,WAAAsB,EAAA5B,SACAmD,EAAA5C,YAAAqB,EAAAvB,UACA8C,EAAA3C,WACA4C,QAAA,SAAA5B,EAAA6B,EAAAC,EAAAC,GACAL,EAAAM,WAAA,4BAAAhC,KAEAiC,MAAA,SAAAjC,EAAA6B,EAAAC,EAAAC,GACAL,EAAAM,WAAA,0BACAE,WAAAL,EACAI,MAAAjC,SAKAO,OACA/B,QAAA,IACAK,SAAA,KAEAgC,YAAA,EACAC,YAAA,SAAAC,EAAAC,GACA,MAAA,mBAAAA,GAAAF,YACA,gCAEAE,EAAAF,iBCpHAqB,kBAAA7D,QAAAC,OAAA,uBACA4D,mBAAAhC,WAAA,sBAAA,SAAA,kBAAA,aACA,SAAAC,EAAAgC,EAAAC,GAGA,QAAAC,GAAAC,GACAF,EAAAE,GAAAC,SAHApC,EAAAqC,WAAAL,EAAAM,QACAtC,EAAAuC,WAAAL,EAAA,WAOAH,kBAAA9B,UAAA,cACA,WACA,OACAC,SAAA,IACAH,WAAA,qBACAI,SAEAM,YAAA,EACAC,YAAA,uCCnBA,IAAA8B,yBAAAtE,QAAAC,OAAA,6BACAqE,yBAAAzC,WAAA,4BAAA,SAAA,eAAA,iBAAA,eACA,SAAAC,EAAAyC,EAAAC,EAAAC,GACA3C,EAAA4C,SAAAF,EAAAJ,QACAtC,EAAAI,GAAAqC,EAAArC,GACAyC,QAAAC,IAAA9C,EAAAI,IACAJ,EAAA+C,iBAAA3C,GAAAqC,EAAArC,IACAyC,QAAAC,IAAA9C,EAAA+C,oBAIAP,wBAAAvC,UAAA,oBAAA,iBACA,SAAAyC,GACA,OACAxC,SAAA,IACAH,WAAA,2BACAI,SAGAM,YAAA,EACAC,YAAA,oDCpBA,IAAAsC,mBAAA9E,QAAAC,OAAA,uBAEA6E,mBAAA/C,UAAA,cAAA,iBACA,SAAAyC,GACA,OACAxC,SAAA,IACA+C,QAAA,aACAlD,WAAA,oBACAI,SAGAM,YAAA,EACAC,YAAA,uCCZA,IAAAwC,kBAAAhF,QAAAC,OAAA,sBACA+E,kBAAAnD,WAAA,qBAAA,SAAA,SAAA,eAAA,iBACA,SAAAC,EAAAf,EAAAwD,EAAAC,GACAzD,EAAAkE,WAAA,KACAlE,EAAAmE,YAAA,MACApD,EAAA4C,SAAAF,EAAAJ,QACAO,QAAAC,IAAA9C,EAAA4C,UACA5C,EAAAqD,SAAAZ,EAAArC,GACAJ,EAAAsD,kBAAAD,SAAAZ,EAAArC,IACAyC,QAAAC,IAAA9C,EAAAsD,kBACAtD,EAAAuD,aAAA,GACAvD,EAAAwD,SAAA,SAAAC,GACAzD,EAAAuD,aAAAE,EACAZ,QAAAC,IAAA9C,EAAAuD,eAEAvD,EAAA0D,SAAA,WAEA,MADAb,SAAAC,IAAA,WAAA9C,EAAAuD,cACAvD,EAAAuD,iBAKAL,iBAAAjD,UAAA,aAAA,iBACA,SAAAyC,GACA,OACAxC,SAAA,IACAH,WAAA,oBACAI,SAGAM,YAAA,EACAC,YAAA,+CAIAwC,iBAAAjD,UAAA,aACA,WACA,OACAC,SAAA,IACAO,YAAA,EACAN,OACAwD,QAAA,IACAC,OAAA,KAEA/C,KAAA,SAAAb,EAAA6D,EAAAC,GACA9D,EAAAwD,SAAA,SAAAO,GACA/D,EAAA4D,OAAAG,IAGArD,YAAA,uCCjDA,IAAAsD,iBAAA9F,QAAAC,OAAA,qBACA6F,iBAAAjE,WAAA,oBAAA,SAAA,kBAAA,aACA,SAAAC,EAAAgC,EAAAC,GAGA,QAAAC,GAAAC,GACAF,EAAAE,GAAAC,SAHApC,EAAAqC,WAAAL,EAAAM,QACAtC,EAAAuC,WAAAL,EAAA,WAOA8B,gBAAA/D,UAAA,UACA,WACA,OACAC,SAAA,IACAH,WAAA,mBACAI,SAEAM,YAAA,EACAC,YAAA,mCCnBA,IAAAuD,gBAAA/F,QAAAC,OAAA,kBACA,YACA,aACA,sBACA,iBACA,kBACA,oBACA,mBACA,0BACA,qBAEA8F,gBAAAtC,QAAA,iBAAA,qBAAA,qBACA,SAAAuC,EAAAC,EAAAC,GACAD,EAAAE,UAAA,eACAH,EAEAI,MAAA,QACA3E,IAAA,cACA4E,SAAA,kBAIAD,MAAA,eACA3E,IAAA,kBACA4E,SAAA,iBAGAD,MAAA,kBACA3E,IAAA,2BACA4E,SAAA,wBAEAD,MAAA,YACA3E,IAAA,wBACAI,WAAA,oBACAwE,SAAA,kBAGAH,EAAAI,MAAA,WACAC,eAAA,WAEAC,KAAA,aAAA,SAAA,aAAA,QAAA,SAAApD,EAAArC,EAAA0F,EAAAC,GAEAtD,EAAAuD,IAAA,gBAAA,WACA5F,EAAA6F,UAGA5G,QAAA6G,SAAAH,EAAA9F,IAAA,SACAG,EAAA+F,SAAAJ,EAAA9F,IAAA,SAGAG,EAAAgG,SChDA,IAAAC,qBAAAhH,QAAAC,OAAA,uBAAA,cACA+G,qBAAAC,QAAA,mBAAA,YACA,SAAAC,GACA,MAAAA,GAAA,oBACA9C,OAAA+C,OAAA,MAAAC,QAAAlF,GAAA,cAAAmF,SAAA,QAKAL,oBAAAC,QAAA,kBAAA,YACA,SAAAC,GACA,MAAAA,GAAA,oBACA9C,OAAA+C,OAAA,MAAAC,QAAAlF,GAAA,YAAAmF,SAAA,QAGAL,oBAAA9G,QAAA,UAAA,aAAA,aAAA,QAAA,SAAAkD,EAAAqD,EAAAC,GAEAtG,KAAA2G,KAAA,WACA3G,KAAAkH,OACAC,SAAA,KACAC,QAAA,KACAC,IAAA,KACAC,WAIAtH,KAAAuH,QAAA,SAAAzF,EAAAC,EAAAG,EAAAF,EAAAV,GAEA,GAAAkB,GAAAxC,KAAAyC,YAAAX,EAEA,IAAA,gBAAAU,GAEAA,EAAAgF,YAAAxF,GAAA,GACAgB,EAAAM,WAAA,qBAAAd,OACA,CACA,GAAAiF,GAAA,GAAApB,GAAAvE,EAAAC,EAAAG,EAAAF,EAAAV,EACAtB,MAAAkH,MAAAI,MAAAvE,KAAA0E,GACAzE,EAAAM,WAAA,mBAAAmE,GAGAzE,EAAAM,WAAA,qBAGAtD,KAAAyC,YAAA,SAAAiF,GACA,GAAAJ,GAAAtH,KAAA2H,UAAAL,MACAM,GAAA,CAOA,OALAhI,SAAAiI,QAAAP,EAAA,SAAAQ,GACAA,EAAAC,UAAAL,IACAE,EAAAE,KAGAF,GAGA5H,KAAA8E,YAAA,SAAAqC,GAEA,MADAnH,MAAAkH,MAAAC,SAAAA,EACAnH,KAAAgI,eAGAhI,KAAAgI,YAAA,WACA,MAAA,KAAAhI,KAAA2H,UAAAL,MAAAW,OAAA,EACAjI,KAAA2H,UAAAR,UAGAnH,KAAA6E,WAAA,SAAAuC,GAEA,MADApH,MAAAkH,MAAAE,SAAAc,WAAAd,GAAAe,QAAA,GACAnI,KAAAoI,cAGApI,KAAAoI,WAAA,WACA,MAAApI,MAAAkH,MAAAE,SAGApH,KAAAqI,OAAA,WACA,OAAAH,WAAAlI,KAAAsI,cAAA,IAAAtI,KAAA2H,UAAAP,SAAAe,QAAA,IAGAnI,KAAAuI,QAAA,SAAAtH,GAEA,MADAjB,MAAAkH,MAAAjG,EACAjB,KAAA2H,WAGA3H,KAAA2H,QAAA,WACA,MAAA3H,MAAAkH,OAGAlH,KAAAwI,SAAA,WACA,MAAAxI,MAAA2H,UAAAL,OAGAtH,KAAAyI,cAAA,WACA,GAAAC,GAAA,EACApB,EAAAtH,KAAAwI,UAIA,OAHA5I,SAAAiI,QAAAP,EAAA,SAAAQ,GACAY,GAAAZ,EAAAnF,gBAEA+F,GAGA1I,KAAA2I,oBAAA,WACA,MAAA3I,MAAA2H,UAAAL,MAAAW,QAGAjI,KAAAsI,YAAA,WACA,GAAAM,GAAA,CAIA,OAHAhJ,SAAAiI,QAAA7H,KAAA2H,UAAAL,MAAA,SAAAQ,GACAc,GAAAd,EAAAe,cAEAX,WAAAU,GAAAT,QAAA,IAGAnI,KAAA8I,UAAA,WACA,OAAAZ,WAAAlI,KAAAsI,cAAAtI,KAAAgI,cAAAhI,KAAAqI,UAAAF,QAAA,IAGAnI,KAAA+I,WAAA,SAAAC,GACA,GAAAlB,GAAA9H,KAAAkH,MAAAI,MAAA2B,OAAAD,EAAA,GAAA,MACAhG,GAAAM,WAAA,qBAAAwE,GACA9E,EAAAM,WAAA,qBAIAtD,KAAAkJ,eAAA,SAAApH,GACA,GAAAgG,GACA7G,EAAAjB,KAAA2H,SACA/H,SAAAiI,QAAA5G,EAAAqG,MAAA,SAAAQ,EAAAkB,GACAlB,EAAAC,UAAAjG,IACAgG,EAAA7G,EAAAqG,MAAA2B,OAAAD,EAAA,GAAA,UAGAhJ,KAAAuI,QAAAtH,GACA+B,EAAAM,WAAA,qBAAAwE,GACA9E,EAAAM,WAAA,qBAGAtD,KAAAmJ,MAAA,WAEAnG,EAAAM,WAAA,oBACAtD,KAAAkH,MAAAI,SACA8B,aAAAL,WAAA,SAGA/I,KAAAqJ,QAAA,WAEA,MAAArJ,MAAAkH,MAAAI,MAAAW,OAAA,GAAA,GAAA,GAIAjI,KAAAe,SAAA,WAEA,GAAA,IAAAf,KAAAwI,WAAAP,OAAA,OAAA,CAEA,IAAAX,KAKA,OAJA1H,SAAAiI,QAAA7H,KAAAwI,WAAA,SAAAV,GACAR,EAAAvE,KAAA+E,EAAA/G,eAIAoG,SAAAnH,KAAAgI,cACAX,IAAArH,KAAAqI,SACAjB,QAAApH,KAAAoI,aACAkB,SAAAtJ,KAAAsI,cACAQ,UAAA9I,KAAA8I,YACAxB,MAAAA,IAKAtH,KAAA0G,SAAA,SAAA6C,GACA,GAAAC,GAAAxJ,IACAwJ,GAAA7C,OACA6C,EAAAtC,MAAAC,SAAAoC,EAAApC,SACAqC,EAAAtC,MAAAG,IAAAkC,EAAAlC,IAEAzH,QAAAiI,QAAA0B,EAAAjC,MAAA,SAAAQ,GACA0B,EAAAtC,MAAAI,MAAAvE,KAAA,GAAAsD,GAAAyB,EAAA2B,IAAA3B,EAAA4B,MAAA5B,EAAA6B,OAAA7B,EAAA8B,UAAA9B,EAAA+B,UAEA7J,KAAAwG,SAGAxG,KAAAwG,MAAA,WACA,MAAAF,GAAAwD,IAAA,OAAAC,KAAAC,UAAAhK,KAAA2H,gBAKAf,oBAAAC,QAAA,cAAA,aAAA,OAAA,SAAA7D,EAAAtC,GAEA,GAAAoH,GAAA,SAAAhG,EAAAC,EAAAG,EAAAF,EAAAV,GACAtB,KAAAiK,MAAAnI,GACA9B,KAAAkK,QAAAnI,GACA/B,KAAAmK,SAAAjI,GACAlC,KAAAwH,YAAAxF,GACAhC,KAAAoK,QAAA9I,GA4FA,OAxFAwG,GAAAuC,UAAAJ,MAAA,SAAAnI,GACAA,EAAA9B,KAAAyJ,IAAA3H,EAEApB,EAAA6C,MAAA,2BAIAuE,EAAAuC,UAAAtC,MAAA,WACA,MAAA/H,MAAAyJ,KAIA3B,EAAAuC,UAAAH,QAAA,SAAAnI,GACAA,EAAA/B,KAAA0J,MAAA3H,EAEArB,EAAA6C,MAAA,4BAGAuE,EAAAuC,UAAAC,QAAA,WACA,MAAAtK,MAAA0J,OAGA5B,EAAAuC,UAAAF,SAAA,SAAAjI,GACA,GAAAqI,GAAArC,WAAAhG,EACAqI,GACA,GAAAA,EACA7J,EAAA6C,MAAA,0BAEAvD,KAAA2J,OAAA,EAGAjJ,EAAA6C,MAAA,6BAGAuE,EAAAuC,UAAAG,SAAA,WACA,MAAAxK,MAAA2J,QAIA7B,EAAAuC,UAAA7C,YAAA,SAAAxF,EAAAyI,GAGA,GAAAC,GAAA9H,SAAAZ,EACA0I,GAAA,IAAA,GACAD,KAAA,EACAzK,KAAA4J,WAAAc,EAEA1K,KAAA4J,UAAAc,EAEA1K,KAAA4J,UAAA,IAAA5J,KAAA4J,UAAA,KAGA5J,KAAA4J,UAAA,EACAlJ,EAAAI,KAAA,wDAMAgH,EAAAuC,UAAA1H,YAAA,WACA,MAAA3C,MAAA4J,WAGA9B,EAAAuC,UAAAD,QAAA,SAAA9I,GACAA,IAAAtB,KAAA6J,MAAAvI,IAGAwG,EAAAuC,UAAAM,QAAA,WACA,MAAA3K,MAAA6J,MAAA7J,KAAA6J,UACAnJ,GAAAI,KAAA,0BAIAgH,EAAAuC,UAAAxB,SAAA,WACA,OAAAX,WAAAlI,KAAA2C,cAAA3C,KAAAwK,YAAArC,QAAA,IAGAL,EAAAuC,UAAAtJ,SAAA,WACA,OACAe,GAAA9B,KAAA+H,QACAhG,KAAA/B,KAAAsK,UACApI,MAAAlC,KAAAwK,WACAxI,SAAAhC,KAAA2C,cACArB,KAAAtB,KAAA2K,UACA/B,MAAA5I,KAAA6I,aAIAf,KAIAlB,oBAAA9G,QAAA,SAAA,UAAA,SAAA8K,GAEA,OAEApK,IAAA,SAAAqK,GACA,GAAAD,EAAAxB,aAAAyB,GAAA,CACA,GAAA5J,GAAArB,QAAAkL,SAAAF,EAAAxB,aAAAyB,GACA,OAAAd,MAAAgB,MAAA9J,GAEA,OAAA,GAKA6I,IAAA,SAAAe,EAAAG,GAOA,MALA9K,UAAA8K,EACAJ,EAAAxB,aAAAL,WAAA8B,GAEAD,EAAAxB,aAAAyB,GAAAjL,QAAAqL,OAAAD,GAEAJ,EAAAxB,aAAAyB;ARxTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtsourcesContent":["\nangular.module('ngCart.fulfilment', [])\n    .service('fulfilmentProvider', ['$injector', function($injector){\n\n        this._obj = {\n            service : undefined,\n            settings : undefined\n        };\n\n        this.setService = function(service){\n            this._obj.service = service;\n        };\n\n        this.setSettings = function(settings){\n            this._obj.settings = settings;\n        };\n\n        this.checkout = function(){\n            var provider = $injector.get('ngCart.fulfilment.' + this._obj.service);\n              return provider.checkout(this._obj.settings);\n\n        }\n\n    }])\n\n\n.service('ngCart.fulfilment.log', ['$q', '$log', 'ngCart', function($q, $log, ngCart){\n\n        this.checkout = function(){\n\n            var deferred = $q.defer();\n\n            $log.info(ngCart.toObject());\n            deferred.resolve({\n                cart:ngCart.toObject()\n            });\n\n            return deferred.promise;\n\n        }\n\n }])\n\n.service('ngCart.fulfilment.http', ['$http', 'ngCart', function($http, ngCart){\n\n        this.checkout = function(settings){\n            return $http.post(settings.url,\n                { data: ngCart.toObject(), options: settings.options});\n        }\n }])\n\n\n.service('ngCart.fulfilment.paypal', ['$http', 'ngCart', function($http, ngCart){\n\n\n}]);\n","/* Directives */\n'use strict';\n\n\nvar cartDirectives=angular.module('cartDirectives', ['ngCart.fulfilment'])\n\n    .controller('CartController',['$scope', 'ngCart', function($scope, ngCart) {\n        $scope.ngCart = ngCart;\n    }])\n\n    .directive('ngcartAddtocart', ['ngCart', function(ngCart){\n        return {\n            restrict : 'E',\n            controller : 'CartController',\n            scope: {\n                id:'@',\n                name:'@',\n                quantity:'@',\n                quantityMax:'@',\n                price:'@',\n                data:'='\n            },\n            transclude: true,\n            templateUrl: function(element, attrs) {\n                if ( typeof attrs.templateUrl == 'undefined' ) {\n                    return 'Components/cart/addtocart.html';\n                } else {\n                    return attrs.templateUrl;\n                }\n            },\n            link:function(scope, element, attrs){\n                scope.attrs = attrs;\n                scope.inCart = function(){\n                    return  ngCart.getItemById(attrs.id);\n                };\n\n                if (scope.inCart()){\n                    scope.q = ngCart.getItemById(attrs.id).getQuantity();\n                } else {\n                    scope.q = parseInt(scope.quantity);\n                }\n\n                scope.qtyOpt =  [];\n                for (var i = 1; i <= scope.quantityMax; i++) {\n                    scope.qtyOpt.push(i);\n                }\n\n            }\n\n        };\n    }])\n\n    .directive('ngcartCart', [function(){\n        return {\n            restrict : 'E',\n            controller : 'CartController',\n            scope: {},\n            templateUrl: function(element, attrs) {\n                if ( typeof attrs.templateUrl == 'undefined' ) {\n                    return 'Components/checkout/cart.html';\n                } else {\n                    return attrs.templateUrl;\n                }\n            },\n            link:function(scope, element, attrs){\n\n            }\n        };\n    }])\n\n    .directive('ngcartSummary', [function(){\n        return {\n            restrict : 'E',\n            controller : 'CartController',\n            scope: {},\n            transclude: true,\n            templateUrl: function(element, attrs) {\n                if ( typeof attrs.templateUrl == 'undefined' ) {\n                    return 'Components/cart/summary.html';\n                } else {\n                    return attrs.templateUrl;\n                }\n            }\n        };\n    }])\n\n    .directive('ngcartCheckout', [function(){\n        return {\n            restrict : 'E',\n            controller : ('CartController', ['$rootScope', '$scope', 'ngCart', 'fulfilmentProvider', function($rootScope, $scope, ngCart, fulfilmentProvider) {\n                $scope.ngCart = ngCart;\n\n                $scope.checkout = function () {\n                    fulfilmentProvider.setService($scope.service);\n                    fulfilmentProvider.setSettings($scope.settings);\n                    fulfilmentProvider.checkout()\n                        .success(function (data, status, headers, config) {\n                            $rootScope.$broadcast('ngCart:checkout_succeeded', data);\n                        })\n                        .error(function (data, status, headers, config) {\n                            $rootScope.$broadcast('ngCart:checkout_failed', {\n                                statusCode: status,\n                                error: data\n                            });\n                        });\n                }\n            }]),\n            scope: {\n                service:'@',\n                settings:'='\n            },\n            transclude: true,\n            templateUrl: function(element, attrs) {\n                if ( typeof attrs.templateUrl == 'undefined' ) {\n                    return 'Components/cart/checkout.html';\n                } else {\n                    return attrs.templateUrl;\n                }\n            }\n        };\n    }]);\n","var categoryDirective=angular.module('categoryDirective',[]);\ncategoryDirective.controller('categoryController',['$scope','CategoryService','$mdSidenav',\n function($scope,CategoryService, $mdSidenav){\n   $scope.categories=CategoryService.query();\n   $scope.toggleLeft = buildDelayedToggler('left');\n   function buildDelayedToggler(navID) {\n       $mdSidenav(navID).toggle();\n   }\n }\n\n]);\ncategoryDirective.directive('ngCategory', [\n  function(){\n    return {\n        restrict : 'E',\n        controller : 'categoryController',\n        scope: {\n        },\n        transclude: true,\n        templateUrl: 'Components/category/category.html',\n\n    };\n}]);\n","var productDetailsDirective=angular.module('productDetailsDirective',[]);\nproductDetailsDirective.controller('productDetailsController',['$scope','$stateParams', 'ProductService','filterFilter',\n function($scope,$stateParams, ProductService,filterFilter){\n   $scope.products= ProductService.query();\n   $scope.id=$stateParams.id;\n   console.log($scope.id);\n   $scope.productKeyValue={id: $stateParams.id};\n   console.log($scope.productKeyValue);\n }\n]);\n\nproductDetailsDirective.directive('ngproductDetails', ['ProductService',\n  function(ProductService){\n    return {\n        restrict : 'E',\n        controller : 'productDetailsController',\n        scope: {\n\n        },\n        transclude: true,\n        templateUrl: 'Components/productDetails/product-details.html',\n    };\n}]);\n","var checkoutDirective=angular.module('checkoutDirective',[]);\n\ncheckoutDirective.directive('ngCheckout', ['ProductService',\n  function(ProductService){\n    return {\n        restrict : 'E',\n        require:'^ngProduct',\n        controller : 'productController',\n        scope: {\n\n        },\n        transclude: true,\n        templateUrl: 'Components/checkout/checkout.html',\n    };\n}]);\n","var productDirective=angular.module('productDirective',[]);\nproductDirective.controller('productController',['$scope','ngCart','$stateParams', 'ProductService',\n function($scope,ngCart,$stateParams, ProductService){\n   ngCart.setTaxRate(7.5);\n   ngCart.setShipping(2.99);\n   $scope.products= ProductService.query();\n   console.log($scope.products);\n   $scope.category=$stateParams.id;\n   $scope.categoryKeyValue={category: $stateParams.id};\n   console.log($scope.categoryKeyValue);\n   $scope.mainImageUrl=\"\";\n   $scope.setImage = function(imageUrl) {\n      $scope.mainImageUrl = imageUrl;\n      console.log($scope.mainImageUrl);\n    };\n  $scope.getImage=function(){\n    console.log(\"Return, \" , $scope.mainImageUrl);\n    return $scope.mainImageUrl;\n  };\n }\n]);\n\nproductDirective.directive('ngProduct', ['ProductService',\n  function(ProductService){\n    return {\n        restrict : 'E',\n        controller : 'productController',\n        scope: {\n\n        },\n        transclude: true,\n        templateUrl: 'Components/productList/product-list.html',\n    };\n}]);\n\nproductDirective.directive('productImg',\n  function(){\n    return {\n        restrict : 'E',\n        transclude:true,\n        scope: {\n          product:'=',\n          imgUrl:'@'\n        },\n        link: function($scope, $element, $attrs) {\n           $scope.setImage = function(img) {\n             $scope.imgUrl=img;\n         };\n       },\n        templateUrl:'Components/productList/images.html',\n    };\n});\n","var topbarDirective=angular.module('topbarDirective',[]);\ntopbarDirective.controller('topbarController',['$scope','CategoryService','$mdSidenav',\n function($scope,CategoryService, $mdSidenav){\n   $scope.categories=CategoryService.query();\n   $scope.toggleLeft = buildDelayedToggler('left');\n   function buildDelayedToggler(navID) {\n       $mdSidenav(navID).toggle();\n   }\n }\n\n]);\ntopbarDirective.directive('topbar', [\n  function(){\n    return {\n        restrict : 'E',\n        controller : 'topbarController',\n        scope: {\n        },\n        transclude: true,\n        templateUrl: 'Components/topbar/topbar.html',\n\n    };\n}]);\n","var OnlineStoreApp=angular.module('OnlineStoreApp', [\n  'ui.router',\n  'ngMaterial',\n  'OnlineStoreServices',\n  'cartDirectives',\n  'topbarDirective',\n  'categoryDirective',\n  'productDirective',\n  'productDetailsDirective',\n  'checkoutDirective'\n]);\nOnlineStoreApp.config (['$stateProvider', '$urlRouterProvider', '$mdThemingProvider',\n  function($stateProvider, $urlRouterProvider, $mdThemingProvider) {\n    $urlRouterProvider.otherwise('/categories');\n    $stateProvider\n        // HOME STATES AND NESTED VIEWS ========================================\n        .state('home', {\n            url: '/categories',\n            template: '<ng-category>'\n        })\n\n        // Product list view filtered by category =================================\n        .state('productList', {\n          url: '/categories/:id',\n          template: '<ng-product>'\n        })\n          // Product details view =================================\n        .state('productDetails', {\n          url: '/categories/products/:id',\n          template: '<ngproduct-details>'\n        })\n        .state('checkout', {\n          url: '/categories/checkout/',\n          controller:\"productController\",\n          template: '<ng-checkout>'\n        });\n\n    $mdThemingProvider.theme('default')\n          .primaryPalette('grey');\n}])\n.run(['$rootScope', 'ngCart','ngCartItem', 'store', function ($rootScope, ngCart, ngCartItem, store) {\n\n    $rootScope.$on('ngCart:change', function(){\n        ngCart.$save();\n    });\n\n    if (angular.isObject(store.get('cart'))) {\n        ngCart.$restore(store.get('cart'));\n\n    } else {\n        ngCart.init();\n    }\n\n}]);\n","/* Services */\n\nvar OnlineStoreServices = angular.module('OnlineStoreServices', ['ngResource']);\nOnlineStoreServices.factory('CategoryService', ['$resource',\n  function($resource){\n    return $resource('Data/:id.json', {}, {\n      query: {method:'GET', params:{id:'categories'}, isArray:true}\n\n    });\n  }\n]);\nOnlineStoreServices.factory('ProductService', ['$resource',\n  function($resource){\n    return $resource('Data/:id.json', {}, {\n      query: {method:'GET', params:{id:'products'}, isArray:true}\n    });\n  }]);\n  OnlineStoreServices.service('ngCart', ['$rootScope', 'ngCartItem', 'store', function ($rootScope, ngCartItem, store) {\n\n          this.init = function(){\n              this.$cart = {\n                  shipping : null,\n                  taxRate : null,\n                  tax : null,\n                  items : []\n              };\n          };\n\n          this.addItem = function (id, name, price, quantity, data) {\n\n              var inCart = this.getItemById(id);\n\n              if (typeof inCart === 'object'){\n                  //Update quantity of an item if it's already in the cart\n                  inCart.setQuantity(quantity, false);\n                  $rootScope.$broadcast('ngCart:itemUpdated', inCart);\n              } else {\n                  var newItem = new ngCartItem(id, name, price, quantity, data);\n                  this.$cart.items.push(newItem);\n                  $rootScope.$broadcast('ngCart:itemAdded', newItem);\n              }\n\n              $rootScope.$broadcast('ngCart:change', {});\n          };\n\n          this.getItemById = function (itemId) {\n              var items = this.getCart().items;\n              var build = false;\n\n              angular.forEach(items, function (item) {\n                  if  (item.getId() === itemId) {\n                      build = item;\n                  }\n              });\n              return build;\n          };\n\n          this.setShipping = function(shipping){\n              this.$cart.shipping = shipping;\n              return this.getShipping();\n          };\n\n          this.getShipping = function(){\n              if (this.getCart().items.length === 0) return 0;\n              return  this.getCart().shipping;\n          };\n\n          this.setTaxRate = function(taxRate){\n              this.$cart.taxRate = +parseFloat(taxRate).toFixed(2);\n              return this.getTaxRate();\n          };\n\n          this.getTaxRate = function(){\n              return this.$cart.taxRate;\n          };\n\n          this.getTax = function(){\n              return +parseFloat(((this.getSubTotal()/100) * this.getCart().taxRate )).toFixed(2);\n          };\n\n          this.setCart = function (cart) {\n              this.$cart = cart;\n              return this.getCart();\n          };\n\n          this.getCart = function(){\n              return this.$cart;\n          };\n\n          this.getItems = function(){\n              return this.getCart().items;\n          };\n\n          this.getTotalItems = function () {\n              var count = 0;\n              var items = this.getItems();\n              angular.forEach(items, function (item) {\n                  count += item.getQuantity();\n              });\n              return count;\n          };\n\n          this.getTotalUniqueItems = function () {\n              return this.getCart().items.length;\n          };\n\n          this.getSubTotal = function(){\n              var total = 0;\n              angular.forEach(this.getCart().items, function (item) {\n                  total += item.getTotal();\n              });\n              return +parseFloat(total).toFixed(2);\n          };\n\n          this.totalCost = function () {\n              return +parseFloat(this.getSubTotal() + this.getShipping() + this.getTax()).toFixed(2);\n          };\n\n          this.removeItem = function (index) {\n              var item = this.$cart.items.splice(index, 1)[0] || {};\n              $rootScope.$broadcast('ngCart:itemRemoved', item);\n              $rootScope.$broadcast('ngCart:change', {});\n\n          };\n\n          this.removeItemById = function (id) {\n              var item;\n              var cart = this.getCart();\n              angular.forEach(cart.items, function (item, index) {\n                  if(item.getId() === id) {\n                      item = cart.items.splice(index, 1)[0] || {};\n                  }\n              });\n              this.setCart(cart);\n              $rootScope.$broadcast('ngCart:itemRemoved', item);\n              $rootScope.$broadcast('ngCart:change', {});\n          };\n\n          this.empty = function () {\n\n              $rootScope.$broadcast('ngCart:change', {});\n              this.$cart.items = [];\n              localStorage.removeItem('cart');\n          };\n\n          this.isEmpty = function () {\n\n              return (this.$cart.items.length > 0 ? false : true);\n\n          };\n\n          this.toObject = function() {\n\n              if (this.getItems().length === 0) return false;\n\n              var items = [];\n              angular.forEach(this.getItems(), function(item){\n                  items.push (item.toObject());\n              });\n\n              return {\n                  shipping: this.getShipping(),\n                  tax: this.getTax(),\n                  taxRate: this.getTaxRate(),\n                  subTotal: this.getSubTotal(),\n                  totalCost: this.totalCost(),\n                  items:items\n              };\n          };\n\n\n          this.$restore = function(storedCart){\n              var _self = this;\n              _self.init();\n              _self.$cart.shipping = storedCart.shipping;\n              _self.$cart.tax = storedCart.tax;\n\n              angular.forEach(storedCart.items, function (item) {\n                  _self.$cart.items.push(new ngCartItem(item._id,  item._name, item._price, item._quantity, item._data));\n              });\n              this.$save();\n          };\n\n          this.$save = function () {\n              return store.set('cart', JSON.stringify(this.getCart()));\n          };\n\n      }]);\n\n      OnlineStoreServices.factory('ngCartItem', ['$rootScope', '$log', function ($rootScope, $log) {\n\n          var item = function (id, name, price, quantity, data) {\n              this.setId(id);\n              this.setName(name);\n              this.setPrice(price);\n              this.setQuantity(quantity);\n              this.setData(data);\n          };\n\n\n          item.prototype.setId = function(id){\n              if (id)  this._id = id;\n              else {\n                  $log.error('An ID must be provided');\n              }\n          };\n\n          item.prototype.getId = function(){\n              return this._id;\n          };\n\n\n          item.prototype.setName = function(name){\n              if (name)  this._name = name;\n              else {\n                  $log.error('A name must be provided');\n              }\n          };\n          item.prototype.getName = function(){\n              return this._name;\n          };\n\n          item.prototype.setPrice = function(price){\n              var priceFloat = parseFloat(price);\n              if (priceFloat) {\n                  if (priceFloat <= 0) {\n                      $log.error('A price must be over 0');\n                  } else {\n                      this._price = (priceFloat);\n                  }\n              } else {\n                  $log.error('A price must be provided');\n              }\n          };\n          item.prototype.getPrice = function(){\n              return this._price;\n          };\n\n\n          item.prototype.setQuantity = function(quantity, relative){\n\n\n              var quantityInt = parseInt(quantity);\n              if (quantityInt % 1 === 0){\n                  if (relative === true){\n                      this._quantity  += quantityInt;\n                  } else {\n                      this._quantity = quantityInt;\n                  }\n                  if (this._quantity < 1) this._quantity = 1;\n\n              } else {\n                  this._quantity = 1;\n                  $log.info('Quantity must be an integer and was defaulted to 1');\n              }\n\n\n          };\n\n          item.prototype.getQuantity = function(){\n              return this._quantity;\n          };\n\n          item.prototype.setData = function(data){\n              if (data) this._data = data;\n          };\n\n          item.prototype.getData = function(){\n              if (this._data) return this._data;\n              else $log.info('This item has no data');\n          };\n\n\n          item.prototype.getTotal = function(){\n              return +parseFloat(this.getQuantity() * this.getPrice()).toFixed(2);\n          };\n\n          item.prototype.toObject = function() {\n              return {\n                  id: this.getId(),\n                  name: this.getName(),\n                  price: this.getPrice(),\n                  quantity: this.getQuantity(),\n                  data: this.getData(),\n                  total: this.getTotal()\n              };\n          };\n\n          return item;\n\n      }]);\n\n    OnlineStoreServices.service('store', ['$window', function ($window) {\n\n          return {\n\n              get: function (key) {\n                  if ($window.localStorage [key]) {\n                      var cart = angular.fromJson($window.localStorage [key]);\n                      return JSON.parse(cart);\n                  }\n                  return false;\n\n              },\n\n\n              set: function (key, val) {\n\n                  if (val === undefined) {\n                      $window.localStorage .removeItem(key);\n                  } else {\n                      $window.localStorage [key] = angular.toJson(val);\n                  }\n                  return $window.localStorage [key];\n              }\n          };\n      }]);\n"],"sourceRoot":"/source/"}